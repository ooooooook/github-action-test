name: Create Release

on:
    push:
        branches: [ "dev" ]
        tags:
            - "v*"

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            # Checkout
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  token: ${{ secrets.GH_TOKEN }}

            # Install Node.js
            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  registry-url: "https://registry.npmjs.org"

            # Install dependencies
            - name: Install dependencies
              uses: borales/actions-yarn@v4
              with:
                  cmd: install
            
            # Build production bundle
            - id: build
              name: Build production bundle
              uses: borales/actions-yarn@v4
              with:
                  cmd: build

            # 签出main
            - name: Checkout main
              uses: actions/checkout@v3
              with:
                  ref: main
                  clean: false
                  token: ${{ secrets.GH_TOKEN }}

            # Copy Files
            - name: Copy Files
              run: |
                  find . ! -path "./build*" ! -path "./.git*" -mindepth 1 -delete
                  cp -r -f ./build/* ./
                  rm -r build
                  ls -al

            # Git commit & push
            - name: Git commit & push
              run: |
                git config --global user.name "ooooooook"
                git config --global user.email "che.yx@qq.com"
                git add .
                git commit -m "update"
                git push

            # Create Release
            - name: Create Release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  draft: false
                  prerelease: false

#            - name: Zip build directory
#              run: zip -r package.zip build
#
#            # Upload artifact
#            - name: Upload artifact
#              uses: actions/upload-artifact@v2
#              with:
#                  name: package
#                  path: package.zip